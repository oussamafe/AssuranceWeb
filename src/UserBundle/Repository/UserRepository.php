<?php

namespace UserBundle\Repository;

/**
 * UserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UserRepository extends \Doctrine\ORM\EntityRepository
{
    public function nbNewClients()
    {
        $query = $this->getEntityManager()->createQuery("select v from UserBundle:User v 
        where v.registerDate >= :end ")->setParameter(':end',new \DateTime('- 7 days'), \Doctrine\DBAL\Types\Type::DATETIME);
        return $query->getResult();
    }

    public function nbloggedClients()
    {
        $query = $this->getEntityManager()->createQuery("select v from UserBundle:User v 
        where v.lastLogin >= :end ")->setParameter(':end',new \DateTime('- 5 hours'), \Doctrine\DBAL\Types\Type::DATETIME);
        return $query->getResult();
    }

    public function usercountries()
    {
        $query = $this->getEntityManager()->createQuery("select v.ip from UserBundle:User v");
        $ip = $query->getResult();
        $location = [];

        /*foreach( $ip as $key => $value){
            $ipadd = $value['ip'];
            $json_string = 'http://ip-api.com/json/'.$ipadd.'?fields=countryCode';
            $jsondata = file_get_contents($json_string);
            $obj = json_decode($jsondata, true);
            $loc = $obj['countryCode'];
            if($loc == "TN")
            {
                $location['tn']++;
            }
            elseif ($loc == "FR")
            {
                $location['fr']++;
            }
            else
            {
                $location['other']++;
            }
        }*/


        foreach( $ip as $key => $value){
            $ipadd = $value['ip'];
            $json_string = 'http://ip-api.com/json/'.$ipadd.'?fields=country&lang=fr';
            $jsondata = file_get_contents($json_string);
            $obj = json_decode($jsondata, true);
            $loc = $obj['country'];

            if(!array_key_exists($loc,$location))
            {
                $location[$loc] = 1;
            }
            else {
                $location[$loc]++;
            }
        }

        return $location;

    }
}
